<?php

function taxonomy_access_advanced_menu_alter(&$items) {
  // Taxonomy overview page.
  $items['admin/structure/taxonomy']['access callback'] = 'taxonomy_access_advanced_access_taxonomy';
  $items['admin/structure/taxonomy']['page callback'] = 'taxonomy_access_advanced_taxonomy_overview_vocabularies';
  $items['admin/structure/taxonomy']['file'] = 'taxonomy_access_advanced.admin.inc';
  $items['admin/structure/taxonomy']['file path'] = drupal_get_path('module', 'taxonomy_access_advanced');
  unset($items['admin/structure/taxonomy']['page arguments']);

  // Terms list.
  $items['admin/structure/taxonomy/%taxonomy_vocabulary_machine_name']['access callback'] = 'taxonomy_access_advanced_access_vocabulary_terms';
  $items['admin/structure/taxonomy/%taxonomy_vocabulary_machine_name']['access arguments'] = array(3);

  // Add terms.
  $items['admin/structure/taxonomy/%taxonomy_vocabulary_machine_name/add']['access callback'] = 'taxonomy_access_advanced_access_vocabulary_terms';
  $items['admin/structure/taxonomy/%taxonomy_vocabulary_machine_name/add']['access arguments'] = array(3);

  // Term edit.
  $items['taxonomy/term/%taxonomy_term/edit']['access callback'] = 'taxonomy_access_advanced_access_term_edit';
  $items['taxonomy/term/%taxonomy_term/edit']['access arguments'] = array(2);
}

/**
 * VPPR's access callback for taxonomy overview page (main entry point).
 *
 * Grants access to taxonomy overview page even if $user has access to any of
 * the vocabularies.
 */
function taxonomy_access_advanced_access_taxonomy() {
  if (user_access('administer taxonomy')) {
    return TRUE;
  }

  $perms = array_keys(taxonomy_access_advanced_permission());
  foreach ($perms as $perm) {
    if (user_access($perm)) {
      return TRUE;
    }
  }
  return FALSE;
}

/**
 * VPPR's access callback for terms list.
 */
function taxonomy_access_advanced_access_vocabulary_terms($vocabulary) {
  global $user;
  $u = user_load($user->uid);
  if(user_access('administer taxonomy')) {
    return true;
  }
  if(variable_get('taxonomy_access_advanced_domain_enable',false)) {
    foreach($u->domain_user as $domain_id) {
      if(user_access('administer ' . $vocabulary->machine_name . ' vocabulary from domain_id '.$domain_id)) {
        return true;
      }
    }
  }
  return false;
}

/**
 * Return edit access for a given term.
 */
function taxonomy_access_advanced_access_term_edit($term) {
  global $user;
  $u = user_load($user->uid);
  if (taxonomy_term_edit_access($term) || user_access('administer ' . $term->vocabulary_machine_name . ' vocabulary terms')) {
    return TRUE;
  }
  if(variable_get('taxonomy_access_advanced_domain_enable',false)) {
    foreach ($u->domain_user as $domain_id) {
      if (user_access('administer ' . $term->vocabulary_machine_name . ' vocabulary from domain_id ' . $domain_id)) {
        return TRUE;
      }
    }
  }
  return FALSE;
}

/**
 * Return delete access for a given term.
 */
function taxonomy_access_advanced_access_term_delete($term) {
  global $user;
  $u = user_load($user->uid);
  if (user_access('administer taxonomy') || user_access("delete terms in $term->vid") || user_access('administer ' . $term->vocabulary_machine_name . ' vocabulary terms')) {
    return TRUE;
  }

  if(variable_get('taxonomy_access_advanced_domain_enable',false)) {
    foreach ($u->domain_user as $domain_id) {
      if (user_access('administer ' . $term->vocabulary_machine_name . ' vocabulary from domain_id ' . $domain_id)) {
        return TRUE;
      }
    }
  }
  return FALSE;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function taxonomy_access_advanced_form_taxonomy_form_term_alter(&$form, &$form_state) {
  if (isset($form['tid']['#value']) && isset($form['actions']['delete']['#access']) && isset($form['#term'])) {
    $form['actions']['delete']['#access'] = taxonomy_access_advanced_access_term_delete((object) $form['#term']);
  }
}

/**
 * Implements hook_permission().
 */
function taxonomy_access_advanced_permission() {
  $perms = array();
  $vocabularies = taxonomy_get_vocabularies();
  foreach ($vocabularies as $vocabulary) {

    if(variable_get('taxonomy_access_advanced_domain_enable',false)) {
      $domaines = domain_list_by_machine_name();
      foreach($domaines as $key => $domain) {
        $perms['administer ' . $vocabulary->machine_name . ' vocabulary from domain_id '.$domain['domain_id']] = array(
          'title' => t('<strong>%name</strong> : Administration si user affecté à <strong>%sitename</strong>', array(
            '%name' => $vocabulary->name,
            '%sitename' => $domain['sitename'],
          )),
        );
      }
    }
    else {
      $perms['administer ' . $vocabulary->machine_name . ' vocabulary'] = array(
        'title' => t('<strong>%name</strong> : Administration', array(
          '%name' => $vocabulary->name,
        )),
      );
    }
  }
  return $perms;
}

/**
 * Implements hook_taxonomy_vocabulary_update().
 */
function taxonomy_access_advanced_taxonomy_vocabulary_update($vocabulary) {
  if ($vocabulary->old_machine_name != $vocabulary->machine_name) {
    db_update('role_permission')
      ->fields(array(
        'permission' => 'administer ' . $vocabulary->machine_name . ' vocabulary terms',
      ))
      ->condition('permission', 'administer ' . $vocabulary->old_machine_name . ' vocabulary terms')
      ->execute();

    // Clear the user access cache.
    drupal_static_reset('user_access');
    drupal_static_reset('user_role_permissions');
  }
}

/**
 * Implements hook_taxonomy_vocabulary_delete().
 */
function taxonomy_access_advanced_taxonomy_vocabulary_delete($vocabulary) {
  db_delete('role_permission')
    ->condition('permission', 'administer ' . $vocabulary->machine_name . ' vocabulary terms')
    ->execute();

  // Clear the user access cache.
  drupal_static_reset('user_access');
  drupal_static_reset('user_role_permissions');
}
